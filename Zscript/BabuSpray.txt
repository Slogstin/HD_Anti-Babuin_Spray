//	------------------------------------------------------------------------------
// 	Well it works so far. I couldn't test it in Coop, so it might cause a crash
//	when spraying players who have heat on them.	-Slogstin
//	------------------------------------------------------------------------------

class HDBabuSpray:HDWeaponGrabber{
	int targettimer;
	int targethealth;
	int targetspawnhealth;
	bool flicked;
	bool washolding;
	default{
		+hdweapon.fitsinbackpack
		weapon.selectionorder 300;
		weapon.slotnumber 20;
		weapon.bobstyle "Alpha";
		weapon.bobrangex 0.15;
		weapon.bobrangey 0.7;
		weapon.bobspeed 2.1;
		weapon.kickback 2;
		scale 0.3;
		inventory.pickupmessage "Picked up a can of ''Babu-Begone'' anti-babuin spray.";
		obituary "%k discovered that %o is a Babuin.";
		hdweapon.barrelsize 26,1,2;
		hdweapon.refid "ABS";
		tag "''Babu-Begone'' Anti-Babuin Spray";
		+inventory.invbar
		inventory.icon "BBUSA0";
	}
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse){return GetSpareWeaponRegular(newowner,reverse);}

	override string,double getpickupsprite(){
		if(weaponstatus[BBUSPR_TANK]<4) {
			return "BBUSB0",0.7;
		}
		else {
			return "BBUSA0",0.7;
		}
	}
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel == 1){
		sb.drawwepnum(hdw.weaponstatus[1],150);
		}
	}
	override string gethelptext(){
		return
		WEPHELP_FIRE.."  Fire\n"
//		..WEPHELP_ALTFIRE.."   Swing\n"
		;
	}
	override double gunmass(){
		return 5;
	}
	override double weaponbulk(){
		return 8;
	}
	
	action void A_NoBabuNo(double nitrovel = 20){
		A_WeaponReady(WRF_NONE);
		invoker.weaponstatus[BBUSPR_TANK]--;
//			A_MuzzleClimb(
//				randompick(-1,1)*frandom(0.2,0.3),
//				randompick(-1,1)*frandom(0.2,0.4));
		
		vector3 gpos=pos+gunpos((11,0,-getdefaultbytype("HDBabuSpray_Projectile").height*0.6));
		let ggg=HDBabuSpray_Projectile(spawn("HDBabuSpray_Projectile",gpos,ALLOW_REPLACE));

		let hdp=hdplayerpawn(self);
		
		ggg.angle=hdp.gunangle;
		ggg.pitch=hdp.gunpitch;
		ggg.target=self;
		
		ggg.angle=angle+frandom(-15,15);

		ggg.vel=vel+(cos(hdp.gunpitch)*(cos(hdp.gunangle),sin(hdp.gunangle)),-sin(hdp.gunpitch))*nitrovel;
		
		}
		
	states{
		ready:
			BBSH A 1{
				A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWUSER3|WRF_ALLOWUSER4);
			}goto readyend;
			
		select0:
			BBSH A 0;
			goto select0big;
		deselect0:
			BBSH A 0;
			goto deselect0big;
		hold:
			BBSH A 0 A_JumpIf(invoker.weaponstatus[BBUSPR_TANK]>4,"saw");
			goto nope;
		fire:
			BBSH A 2;
			BBSH B 4 A_JumpIf(invoker.weaponstatus[BBUSPR_TANK]>4,"saw");
			goto nope;
		saw:
			BBSH B 2 
			{A_NoBabuNo();
			A_StartSound("BabuSpray/Tsss",CHAN_7,CHANF_OVERLAP);}
			BBSH B 0 A_Refire();
			goto readyend;
		
		IGOTEM:TNT1 A 1;stop;

		spawn:
			BBUS B 0 A_JumpIf(invoker.weaponstatus[BBUSPR_TANK]<5,2);
			BBUS A 0;
			#### # -1;
			stop;
	}
	override void initializewepstats(bool idfa){
		weaponstatus[BBUSPR_TANK]=150;
	}
}
		
		
		
		
		
		
		enum babuspraystatus{
	BBUSPR_JUSTUNLOAD=1,

	BBUSPR_FLAGS=0,
	BBUSPR_TANK=1,
};

class HDBabuPuff:HDSmoke{
	default{
		scale 0.3;gravity 0.6;alpha 0.75;
		hdpuff.fadeafter 12;
		hdpuff.decel 0.96;
		hdpuff.fade 0.91;
		hdpuff.grow 0.1;
		hdpuff.minalpha 0.001;
		hdpuff.startvelz 2.;
		radius 3; height 3;
		+rollsprite
	}
	override void postbeginplay()
		{A_SetRoll(roll+frandom(0,360));hdactor.postbeginplay();}
	states{
	spawn:
		WPS0 ABCD 0{frame=random(0,3);}
		WPS0 ### 1 A_SetScale(scale.y*1.01);
		WPS0 ## 1 A_SetScale(scale.y*1.005);
		WPS0 # 1 A_SetScale(scale.y*1.0025);
		WPS0 # -1;
		wait;
	}
}

class HDBabuSpray_Projectile:HDFireball{
	
	default{
		//missiletype "HDImpBallTail";
		speed 40;
		damage 0;
		scale 0.3;
		gravity 0.2;
		+FORCEPAIN
		seesound "pb/fuck";
		deathsound "pb/fuck";
		activesound "pb/fuck";
	}
	double initangleto;
	double inittangle;
	double inittz;
	vector3 initpos;
	void A_ImpSquirt(){
		roll=frandom(0,360);alpha*=0.96;scale*=frandom(1.,0.96);
		if(!tracer)return;
		double diff=max(
			absangle(initangleto,angleto(tracer)),
			absangle(inittangle,tracer.angle),
			abs(inittz-tracer.pos.z)*0.05
		);

		//do it again
		initangleto=angleto(tracer);
		inittangle=tracer.angle;
		inittz=tracer.pos.z;
		}
/*	override void tick(){
	scalex+=0.15;
	scaley+=0.15;
	super.tick();
	}*/

	states{
	spawn:
	
		BBSP AAA 1
		{
		scale.x+=0.01;
		scale.y+=0.01;
		
        if(!blockingmobj)return; //dastrukar's fix
            switch(blockingmobj.GetClassName()){

                case 'HDImpBall':
                    blockingmobj.die(blockingmobj, blockingmobj);
                    break;
				}
		
		}
		BBSP AAABBBBBBBCCCCCCCDDDDDDDEEEEEEE 1
		{
		scale.x+=0.01;
		scale.y+=0.01;
		
        if(!blockingmobj)return; //dastrukar's fix
            switch(blockingmobj.GetClassName()){

                case 'HDImpBall':
                    blockingmobj.die(blockingmobj, blockingmobj);
                    break;
				}
		
				For(let ccc = BlockThingsIterator.Create(self,256); ccc.Next();){
					If(!ccc.thing||Distance3D(ccc.thing)>256||!ccc.thing.CheckSight(self)){Continue;}
					
					//this shit has caused me a headache
					//thank you renegade4339 for solving this issue
					let plr = HDPlayerPawn(ccc.thing);
					let mob = HDMobBase(ccc.thing);
					
					If(ccc.thing is "HDImpBall")
					{
						target=ccc.thing;
						ccc.thing.die(ccc.thing, ccc.thing);
					}
					
					Else If(ccc.thing is "HDPlayerPawn")
					{
						target=plr;
						plr.stunned+=4;
					}
				
				}
		
		
		}
		stop;
	death:
		TNT1 A 0{
		A_Scream();
		tracer=null;
        if(!blockingmobj)return; //also dastrukar's fix
        switch(blockingmobj.GetClassName()){
                case 'Necromancer':
                case 'Hatchling':
                case 'FlyingSkull':
                case 'Putto':
				case 'HDFirecan':
				case 'InnocentFirecan':
				case 'KillerFirecan':
                    blockingmobj.damagemobj(self,target,1000,"Bashing");
                    break;

                case 'HDImpBall':
                    blockingmobj.die(blockingmobj, blockingmobj);
                    break;
				}
				
				For(let ccc = BlockThingsIterator.Create(self,256); ccc.Next();){
					If(!ccc.thing||Distance3D(ccc.thing)>256||!ccc.thing.CheckSight(self)){Continue;}
					
					//this shit has caused me a headache
					//thank you renegade4339 for solving this issue
					let plr = HDPlayerPawn(ccc.thing);
					let mob = HDMobBase(ccc.thing);
					
					//If(ccc.thing.bISMONSTER&&ccc.thing.health>0)
					If(ccc.thing.health>0)
					{
						
						let mob = HDMobBase(ccc.thing);
						
						If((ccc.thing is "HDMobBase") && !(ccc.thing is "Babuin"))
						{
							target=mob;
							mob.stunned+=24;	
						}
						
						If(ccc.thing is "Babuin")
						{
							target=mob;
							mob.stunned+=105;
						}
						
						//	I'm aware that this is a bad way of doing it, but honestly
						//	it's just a joke weapon and i already tried other stuff
						//	This is just the thing i know works.	-Slogstin
						if (mob && mob.FindInventory("heat")) {
							if (random(0, 99) < 4) {
							A_Immolate(tracer,target,0,requireSight:true);
						}
						}
						
					}
					
					Else If(ccc.thing is "HDPlayerPawn")
					{
						target=plr;
						plr.stunned+=16;
						
						//	If there's ever a crash regarding spraying other players,
						//	This will likely be the reason.		-Slogstin
						if (plr.FindInventory("heat")) {
							if (random(0, 99) < 4) {
							A_Immolate(tracer, plr, 0, requireSight: true);
						}
					}
					}
				
				}
					
				
			}
				
				
		stop;
	}
}